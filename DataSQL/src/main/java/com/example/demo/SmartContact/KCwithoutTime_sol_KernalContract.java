package com.example.demo.SmartContact;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint32;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.6.0.
 */
public class KCwithoutTime_sol_KernalContract extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_TOKENLIST = "TokenList";

    public static final String FUNC_ADDRESSAUTHTYPE = "addressAuthType";

    public static final String FUNC_GETTOKEN = "getToken";

    public static final String FUNC_ADDAUTHORIZEDADDRESS = "addAuthorizedAddress";

    public static final String FUNC_GETHPSTIP = "getHpstIp";

    public static final String FUNC_LOADHSPTINFO = "loadHsptInfo";

    public static final String FUNC_GETITSAUTHTYPE = "getItsAuthType";

    public static final String FUNC_GETHPSTFROMDSS = "getHpstFromDss";

    public static final String FUNC_ALLDSSLIST = "AllDssList";

    public static final String FUNC_GETALLHPSTNAME = "getAllHpstName";

    public static final String FUNC_GETALLHPSTIP = "getAllHpstIp";

    public static final String FUNC_GETALLDSSNAME = "getAllDssName";

    public static final String FUNC_REQUESTLIST = "RequestList";

    public static final String FUNC_SOLVEREQUEST = "solveRequest";

    public static final String FUNC_SENDREQUEST = "sendRequest";

    public static final String FUNC_LOGIN = "login";

    public static final String FUNC_ALLHSPTLIST = "AllHsptList";

    public static final String FUNC_AUTHLIST = "AuthList";

    public static final String FUNC_WHATISMYTOKEN = "whatIsMyToken";

    public static final String FUNC_TOKENVERIFICATION = "tokenVerification";

    public static final String FUNC_TOKENGENERATION = "tokenGeneration";

    public static final String FUNC_ADDRESSVERFICATION = "addressVerfication";

    @Deprecated
    protected KCwithoutTime_sol_KernalContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected KCwithoutTime_sol_KernalContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected KCwithoutTime_sol_KernalContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected KCwithoutTime_sol_KernalContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<Tuple2<Address, Utf8String>> TokenList(Uint256 param0) {
        final Function function = new Function(FUNC_TOKENLIST, 
                Arrays.<Type>asList(param0), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple2<Address, Utf8String>>(
                new Callable<Tuple2<Address, Utf8String>>() {
                    @Override
                    public Tuple2<Address, Utf8String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<Address, Utf8String>(
                                (Address) results.get(0), 
                                (Utf8String) results.get(1));
                    }
                });
    }

    public RemoteCall<Uint256> addressAuthType(Address _addr) {
        final Function function = new Function(FUNC_ADDRESSAUTHTYPE, 
                Arrays.<Type>asList(_addr), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<TransactionReceipt> getToken() {
        final Function function = new Function(
                FUNC_GETTOKEN, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addAuthorizedAddress(Address _addr, Uint256 _AuthType) {
        final Function function = new Function(
                FUNC_ADDAUTHORIZEDADDRESS, 
                Arrays.<Type>asList(_addr, _AuthType), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Utf8String> getHpstIp(Utf8String _Name) {
        final Function function = new Function(FUNC_GETHPSTIP, 
                Arrays.<Type>asList(_Name), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<TransactionReceipt> loadHsptInfo(Utf8String _Name, Utf8String _Ip, Utf8String _DssList) {
        final Function function = new Function(
                FUNC_LOADHSPTINFO, 
                Arrays.<Type>asList(_Name, _Ip, _DssList), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Uint256> getItsAuthType(Utf8String _token) {
        final Function function = new Function(FUNC_GETITSAUTHTYPE, 
                Arrays.<Type>asList(_token), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getHpstFromDss(Utf8String _DssName) {
        final Function function = new Function(FUNC_GETHPSTFROMDSS, 
                Arrays.<Type>asList(_DssName), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Tuple3<Uint32, Utf8String, Utf8String>> AllDssList(Uint256 param0) {
        final Function function = new Function(FUNC_ALLDSSLIST, 
                Arrays.<Type>asList(param0), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple3<Uint32, Utf8String, Utf8String>>(
                new Callable<Tuple3<Uint32, Utf8String, Utf8String>>() {
                    @Override
                    public Tuple3<Uint32, Utf8String, Utf8String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<Uint32, Utf8String, Utf8String>(
                                (Uint32) results.get(0), 
                                (Utf8String) results.get(1), 
                                (Utf8String) results.get(2));
                    }
                });
    }

    public RemoteCall<Utf8String> getAllHpstName() {
        final Function function = new Function(FUNC_GETALLHPSTNAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getAllHpstIp() {
        final Function function = new Function(FUNC_GETALLHPSTIP, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getAllDssName() {
        final Function function = new Function(FUNC_GETALLDSSNAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Tuple2<Utf8String, Address>> RequestList(Uint256 param0) {
        final Function function = new Function(FUNC_REQUESTLIST, 
                Arrays.<Type>asList(param0), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
        return new RemoteCall<Tuple2<Utf8String, Address>>(
                new Callable<Tuple2<Utf8String, Address>>() {
                    @Override
                    public Tuple2<Utf8String, Address> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<Utf8String, Address>(
                                (Utf8String) results.get(0), 
                                (Address) results.get(1));
                    }
                });
    }

    public RemoteCall<TransactionReceipt> solveRequest(Utf8String _HsptName, Uint256 _auth_type) {
        final Function function = new Function(
                FUNC_SOLVEREQUEST, 
                Arrays.<Type>asList(_HsptName, _auth_type), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> sendRequest(Utf8String _HsptName) {
        final Function function = new Function(
                FUNC_SENDREQUEST, 
                Arrays.<Type>asList(_HsptName), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Uint256> login() {
        final Function function = new Function(FUNC_LOGIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Tuple3<Uint32, Utf8String, Utf8String>> AllHsptList(Uint256 param0) {
        final Function function = new Function(FUNC_ALLHSPTLIST, 
                Arrays.<Type>asList(param0), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple3<Uint32, Utf8String, Utf8String>>(
                new Callable<Tuple3<Uint32, Utf8String, Utf8String>>() {
                    @Override
                    public Tuple3<Uint32, Utf8String, Utf8String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<Uint32, Utf8String, Utf8String>(
                                (Uint32) results.get(0), 
                                (Utf8String) results.get(1), 
                                (Utf8String) results.get(2));
                    }
                });
    }

    public RemoteCall<Tuple2<Address, Uint256>> AuthList(Uint256 param0) {
        final Function function = new Function(FUNC_AUTHLIST, 
                Arrays.<Type>asList(param0), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple2<Address, Uint256>>(
                new Callable<Tuple2<Address, Uint256>>() {
                    @Override
                    public Tuple2<Address, Uint256> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<Address, Uint256>(
                                (Address) results.get(0), 
                                (Uint256) results.get(1));
                    }
                });
    }

    public RemoteCall<Utf8String> whatIsMyToken() {
        final Function function = new Function(FUNC_WHATISMYTOKEN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Bool> tokenVerification(Utf8String _token) {
        final Function function = new Function(FUNC_TOKENVERIFICATION, 
                Arrays.<Type>asList(_token), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> tokenGeneration(Address _msgsender) {
        final Function function = new Function(FUNC_TOKENGENERATION, 
                Arrays.<Type>asList(_msgsender), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> tokenGeneration() {
        final Function function = new Function(FUNC_TOKENGENERATION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Bool> addressVerfication(Address _addr) {
        final Function function = new Function(FUNC_ADDRESSVERFICATION, 
                Arrays.<Type>asList(_addr), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public static RemoteCall<KCwithoutTime_sol_KernalContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(KCwithoutTime_sol_KernalContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<KCwithoutTime_sol_KernalContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(KCwithoutTime_sol_KernalContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<KCwithoutTime_sol_KernalContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(KCwithoutTime_sol_KernalContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<KCwithoutTime_sol_KernalContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(KCwithoutTime_sol_KernalContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static KCwithoutTime_sol_KernalContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new KCwithoutTime_sol_KernalContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static KCwithoutTime_sol_KernalContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new KCwithoutTime_sol_KernalContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static KCwithoutTime_sol_KernalContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new KCwithoutTime_sol_KernalContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static KCwithoutTime_sol_KernalContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new KCwithoutTime_sol_KernalContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }
}
