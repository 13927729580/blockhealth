package com.example.demo.SmartContact;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint32;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.6.0.
 */
public class KernalContract_sol_KernalContract extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260408051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160018152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505061359f8061010e6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305c79c3e146100d55780630a7104121461014957806338ab36fd146101a05780633b4e5c00146102825780634293b33c146102cf5780635e0d7bd21461043d578063656f8bb11461051f5780636fe08be1146106445780637fbf50b0146106d45780638b43e2331461072f578063b34e97e8146107bf578063b4b403c5146107ea578063e51e76251461090f578063f8a8fd6d14610aa7575b600080fd5b3480156100e157600080fd5b5061010060048036038101908080359060200190929190505050610afe565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561015557600080fd5b5061018a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b51565b6040518082815260200191505060405180910390f35b3480156101ac57600080fd5b50610207600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610cba565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561024757808201518184015260208101905061022c565b50505050905090810190601f1680156102745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028e57600080fd5b506102cd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f6b565b005b3480156102db57600080fd5b506103c2600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506111aa565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104025780820151818401526020810190506103e7565b50505050905090810190601f16801561042f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561044957600080fd5b506104a4600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611301565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104e45780820151818401526020810190506104c9565b50505050905090810190601f1680156105115780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561052b57600080fd5b5061054a6004803603810190808035906020019092919050505061166e565b604051808463ffffffff1663ffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156105a0578082015181840152602081019050610585565b50505050905090810190601f1680156105cd5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156106065780820151818401526020810190506105eb565b50505050905090810190601f1680156106335780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561065057600080fd5b506106596117e7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561069957808201518184015260208101905061067e565b50505050905090810190601f1680156106c65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106e057600080fd5b50610715600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119e1565b604051808215151515815260200191505060405180910390f35b34801561073b57600080fd5b50610744611a91565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610784578082015181840152602081019050610769565b50505050905090810190601f1680156107b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156107cb57600080fd5b506107d4611c8a565b6040518082815260200191505060405180910390f35b3480156107f657600080fd5b5061081560048036038101908080359060200190929190505050611dd2565b604051808463ffffffff1663ffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561086b578082015181840152602081019050610850565b50505050905090810190601f1680156108985780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156108d15780820151818401526020810190506108b6565b50505050905090810190601f1680156108fe5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561091b57600080fd5b50610a2c600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f4b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a6c578082015181840152602081019050610a51565b50505050905090810190601f168015610a995780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610ab357600080fd5b50610abc612199565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600281815481101515610b0d57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60008060006002805490509150600090505b81811015610c14578373ffffffffffffffffffffffffffffffffffffffff16600282815481101515610b9157fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c0757600281815481101515610bee57fe5b9060005260206000209060020201600101549250610cb3565b8080600101915050610b63565b818114151515610cb2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f74686973206164647265737320686173206e6f74206265656e20617574686f7281526020017f697a65642e00000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b5050919050565b60606000610cc7336119e1565b1515610d3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f796f752068617665206e6f74206265656e20617574686f72697a65642e00000081525060200191505060405180910390fd5b60006001805490501415610d86576040805190810160405280600f81526020017f6e6f20686f73707469616c2079657400000000000000000000000000000000008152509150610f65565b600090505b600180549050811015610f2c57610e5a83600183815481101515610dab57fe5b90600052602060002090600302016001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e505780601f10610e2557610100808354040283529160200191610e50565b820191906000526020600020905b815481529060010190602001808311610e3357829003601f168201915b50505050506121c3565b15610f1f57600181815481101515610e6e57fe5b90600052602060002090600302016002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f135780601f10610ee857610100808354040283529160200191610f13565b820191906000526020600020905b815481529060010190602001808311610ef657829003601f168201915b50505050509150610f65565b8080600101915050610d8b565b6040805190810160405280600e81526020017f6e6f20737563682061204873707400000000000000000000000000000000000081525091505b50919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611056576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f596f752068617665206e6f207065726d697373696f6e20696e20617574686f7281526020017f697a696e6720616464726573732e00000000000000000000000000000000000081525060400191505060405180910390fd5b61105f826119e1565b1515156110fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f5468697320616464726573732068617320616c7265616479206265656e20617581526020017f74686f72697a65642e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600260408051908101604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050505050565b60606000806111b98686612313565b6000845114156111c8576112f8565b6111d1846124f8565b915083600490805190602001906111e99291906133c7565b50600090505b818110156112b2576112016004612614565b6112a560058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561129a5780601f1061126f5761010080835404028352916020019161129a565b820191906000526020600020905b81548152906001019060200180831161127d57829003601f168201915b505050505087612972565b80806001019150506111ef565b818114156112f7576040805190810160405280600781526020017f737563636565640000000000000000000000000000000000000000000000000081525092506112f8565b5b50509392505050565b606080600080611310336119e1565b1515611384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f796f752068617665206e6f74206265656e20617574686f72697a65642e00000081525060200191505060405180910390fd5b6000855114156113cb576040805190810160405280600f81526020017f696e70757420736f6d657468696e6700000000000000000000000000000000008152509350611666565b600080805490501415611415576040805190810160405280600e81526020017f6e6f2064697365617365207965740000000000000000000000000000000000008152509350611666565b60006001805490501415611460576040805190810160405280600f81526020017f6e6f20686f73707469616c2079657400000000000000000000000000000000008152509350611666565b600061146b86612ca1565b81548110151561147757fe5b9060005260206000209060030201600201600690805460018160011615610100020316600290046114a9929190613447565b5061154d60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115435780601f1061151857610100808354040283529160200191611543565b820191906000526020600020905b81548152906001019060200180831161152657829003601f168201915b50505050506124f8565b9150600090505b81811015611662576115666006612d99565b6116128361160d60078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116035780601f106115d857610100808354040283529160200191611603565b820191906000526020600020905b8154815290600101906020018083116115e657829003601f168201915b5050505050610cba565b6130f7565b9250611653836040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152506130f7565b92508080600101915050611554565b8293505b505050919050565b60008181548110151561167d57fe5b90600052602060002090600302016000915090508060000160009054906101000a900463ffffffff1690806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561173f5780601f106117145761010080835404028352916020019161173f565b820191906000526020600020905b81548152906001019060200180831161172257829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117dd5780601f106117b2576101008083540402835291602001916117dd565b820191906000526020600020905b8154815290600101906020018083116117c057829003601f168201915b5050505050905083565b60608060006117f5336119e1565b1515611869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f796f752068617665206e6f74206265656e20617574686f72697a65642e00000081525060200191505060405180910390fd5b600060018054905014156118b4576040805190810160405280600f81526020017f6e6f20686f73707469616c20796574000000000000000000000000000000000081525092506119dc565b600090505b6001805490508110156119d857611988826001838154811015156118d957fe5b90600052602060002090600302016001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561197e5780601f106119535761010080835404028352916020019161197e565b820191906000526020600020905b81548152906001019060200180831161196157829003601f168201915b50505050506130f7565b91506119c9826040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152506130f7565b915080806001019150506118b9565b8192505b505090565b60008060006002805490509150600090505b81811015611a85578373ffffffffffffffffffffffffffffffffffffffff16600282815481101515611a2157fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611a785760019250611a8a565b80806001019150506119f3565b600092505b5050919050565b6060806000611a9f336119e1565b1515611b13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f796f752068617665206e6f74206265656e20617574686f72697a65642e00000081525060200191505060405180910390fd5b600080805490501415611b5d576040805190810160405280600e81526020017f6e6f2064697365617365207965740000000000000000000000000000000000008152509250611c85565b600090505b600080549050811015611c8157611c3182600083815481101515611b8257fe5b90600052602060002090600302016001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c275780601f10611bfc57610100808354040283529160200191611c27565b820191906000526020600020905b815481529060010190602001808311611c0a57829003601f168201915b50505050506130f7565b9150611c72826040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152506130f7565b91508080600101915050611b62565b8192505b505090565b6000806000803392506002805490509150600090505b81811015611d51578273ffffffffffffffffffffffffffffffffffffffff16600282815481101515611cce57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611d4457600281815481101515611d2b57fe5b9060005260206000209060020201600101549350611dcc565b8080600101915050611ca0565b6001820381141515611dcb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f796f752068617665206e6f7420617574686f72697a6564207965742e0000000081525060200191505060405180910390fd5b5b50505090565b600181815481101515611de157fe5b90600052602060002090600302016000915090508060000160009054906101000a900463ffffffff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ea35780601f10611e7857610100808354040283529160200191611ea3565b820191906000526020600020905b815481529060010190602001808311611e8657829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f415780601f10611f1657610100808354040283529160200191611f41565b820191906000526020600020905b815481529060010190602001808311611f2457829003601f168201915b5050505050905083565b6060600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561203b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f596f7520796f752068617665206e6f74206265656e20617574686f72697a656481526020017f2e0000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6120458888612313565b6000865114156120545761218e565b61205d866124f8565b915085600490805190602001906120759291906133c7565b50600090505b8181101561213e5761208d6004612614565b61213160058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121265780601f106120fb57610100808354040283529160200191612126565b820191906000526020600020905b81548152906001019060200180831161210957829003601f168201915b505050505089612972565b808060010191505061207b565b6121488585610f6b565b8181141561218d576040805190810160405280600781526020017f7375636365656400000000000000000000000000000000000000000000000000815250925061218e565b5b505095945050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006060806000859250849150815183511415156121e4576000935061230a565b600090505b825181101561230557818181518110151561220057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916838281518110151561227b57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415156122f8576000935061230a565b80806001019150506121e9565b600193505b50505092915050565b600080600091505b600180549050821015612436576123ea8460018481548110151561233b57fe5b90600052602060002090600302016001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123e05780601f106123b5576101008083540402835291602001916123e0565b820191906000526020600020905b8154815290600101906020018083116123c357829003601f168201915b50505050506121c3565b1561242957826001838154811015156123ff57fe5b906000526020600020906003020160020190805190602001906124239291906133c7565b506124f2565b818060010192505061231b565b600180549050905060016060604051908101604052808363ffffffff168152602001868152602001858152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160010190805190602001906124d09291906134ce565b5060408201518160020190805190602001906124ed9291906134ce565b505050505b50505050565b6000606060008084925060019150600090505b8251811015612609577f2c000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916838281518110151561256557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156125fc57600081141580156125ed575060018351038114155b156125fb5781806001019250505b5b808060010191505061250b565b819350505050919050565b600080600080600085945084805460018160011615610100020316600290049050935060008414156126455761296a565b8560059080546001816001161561010002031660029004612667929190613447565b50856004908054600181600116156101000203166002900461268a929190613447565b506001925060029150600090505b83811015612969577f2c000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168582815460018160011615610100020316600290048110151561270257fe5b8154600116156127215790600052602060002090602091828204019190065b9054901a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415612925578091506128168383888054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561280c5780601f106127e15761010080835404028352916020019161280c565b820191906000526020600020905b8154815290600101906020018083116127ef57829003601f168201915b50505050506132c2565b6005908051906020019061282b9291906133c7565b50836001830114156128635760206040519081016040528060008152506004908051906020019061285d9291906133c7565b50612969565b61290a6002830185888054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129005780601f106128d557610100808354040283529160200191612900565b820191906000526020600020905b8154815290600101906020018083116128e357829003601f168201915b50505050506132c2565b6004908051906020019061291f9291906133c7565b50612969565b6001840381141561295c576020604051908101604052806000815250600490805190602001906129569291906133c7565b50612969565b8080600101915050612698565b5b505050505050565b6000606060006060600093505b600080549050841015612b9c57612a4e8660008681548110151561299f57fe5b90600052602060002090600302016001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a445780601f10612a1957610100808354040283529160200191612a44565b820191906000526020600020905b815481529060010190602001808311612a2757829003601f168201915b50505050506121c3565b15612b8f57612a92856040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152506130f7565b9250612b56600085815481101515612aa657fe5b90600052602060002090600302016002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b4b5780601f10612b2057610100808354040283529160200191612b4b565b820191906000526020600020905b815481529060010190602001808311612b2e57829003601f168201915b5050505050846130f7565b600085815481101515612b6557fe5b90600052602060002090600302016002019080519060200190612b899291906133c7565b50612c99565b838060010194505061297f565b6000805490509150612be3856040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152506130f7565b905060006060604051908101604052808463ffffffff168152602001888152602001838152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff1602179055506020820151816001019080519060200190612c779291906134ce565b506040820151816002019080519060200190612c949291906134ce565b505050505b505050505050565b600080600090505b600080549050811015612d9257612d7883600083815481101515612cc957fe5b90600052602060002090600302016001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d6e5780601f10612d4357610100808354040283529160200191612d6e565b820191906000526020600020905b815481529060010190602001808311612d5157829003601f168201915b50505050506121c3565b15612d8557809150612d93565b8080600101915050612ca9565b5b50919050565b60008060008060008594508480546001816001161561010002031660029004905093506000841415612dca576130ef565b8560079080546001816001161561010002031660029004612dec929190613447565b508560069080546001816001161561010002031660029004612e0f929190613447565b506001925060029150600090505b838110156130ee577f2c000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191685828154600181600116156101000203166002900481101515612e8757fe5b815460011615612ea65790600052602060002090602091828204019190065b9054901a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156130aa57809150612f9b8383888054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612f915780601f10612f6657610100808354040283529160200191612f91565b820191906000526020600020905b815481529060010190602001808311612f7457829003601f168201915b50505050506132c2565b60079080519060200190612fb09291906133c7565b5083600183011415612fe857602060405190810160405280600081525060069080519060200190612fe29291906133c7565b506130ee565b61308f6002830185888054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156130855780601f1061305a57610100808354040283529160200191613085565b820191906000526020600020905b81548152906001019060200180831161306857829003601f168201915b50505050506132c2565b600690805190602001906130a49291906133c7565b506130ee565b600184038114156130e1576020604051908101604052806000815250600690805190602001906130db9291906133c7565b506130ee565b8080600101915050612e1d565b5b505050505050565b60608060608060008087945086935083518551016040519080825280601f01601f19166020018201604052801561313d5781602001602082028038833980820191505090505b50925060009150600090505b84518110156131fc57848181518110151561316057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156131bf57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613149565b600090505b83518110156132b457838181518110151561321857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561327757fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613201565b829550505050505092915050565b60608060006001868603016040519080825280601f01601f1916602001820160405280156132ff5781602001602082028038833980820191505090505b509150600090505b858503811115156133bb578360018783010381518110151561332557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002828281518110151561337e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613307565b81925050509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061340857805160ff1916838001178555613436565b82800160010185558215613436579182015b8281111561343557825182559160200191906001019061341a565b5b509050613443919061354e565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061348057805485556134bd565b828001600101855582156134bd57600052602060002091601f016020900482015b828111156134bc5782548255916001019190600101906134a1565b5b5090506134ca919061354e565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061350f57805160ff191683800117855561353d565b8280016001018555821561353d579182015b8281111561353c578251825591602001919060010190613521565b5b50905061354a919061354e565b5090565b61357091905b8082111561356c576000816000905550600101613554565b5090565b905600a165627a7a72305820eef2433d0ed17a55da2b9572cd42fa7cd782edeb9059c3fc0ed5ee2eccf51db30029";

    public static final String FUNC_AUTH_LIST = "Auth_list";

    public static final String FUNC_ADDRESS_AUTH_TYPE = "address_auth_type";

    public static final String FUNC_GETHPSTIP = "getHpstIp";

    public static final String FUNC_ADD_AUTHORIZED_ADDRESS = "add_authorized_address";

    public static final String FUNC_LOADHSPTINFO = "loadHsptInfo";

    public static final String FUNC_GETHPSTFROMDSS = "getHpstFromDss";

    public static final String FUNC_ALLDSSLIST = "AllDssList";

    public static final String FUNC_GETALLHPSTNAME = "getAllHpstName";

    public static final String FUNC_ADDRESS_VERIFICATION = "address_verification";

    public static final String FUNC_GETALLDSSNAME = "getAllDssName";

    public static final String FUNC_LOGIN = "login";

    public static final String FUNC_ALLHSPTLIST = "AllHsptList";

    public static final String FUNC_TEST = "test";

    @Deprecated
    protected KernalContract_sol_KernalContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected KernalContract_sol_KernalContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected KernalContract_sol_KernalContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected KernalContract_sol_KernalContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<Tuple2<Address, Uint256>> Auth_list(Uint256 param0) {
        final Function function = new Function(FUNC_AUTH_LIST, 
                Arrays.<Type>asList(param0), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple2<Address, Uint256>>(
                new Callable<Tuple2<Address, Uint256>>() {
                    @Override
                    public Tuple2<Address, Uint256> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<Address, Uint256>(
                                (Address) results.get(0), 
                                (Uint256) results.get(1));
                    }
                });
    }

    public RemoteCall<Uint256> address_auth_type(Address _addr) {
        final Function function = new Function(FUNC_ADDRESS_AUTH_TYPE, 
                Arrays.<Type>asList(_addr), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getHpstIp(Utf8String _Name) {
        final Function function = new Function(FUNC_GETHPSTIP, 
                Arrays.<Type>asList(_Name), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<TransactionReceipt> add_authorized_address(Address _addr, Uint256 _AuthType) {
        final Function function = new Function(
                FUNC_ADD_AUTHORIZED_ADDRESS, 
                Arrays.<Type>asList(_addr, _AuthType), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> loadHsptInfo(Utf8String _Name, Utf8String _Ip, Utf8String _DssList) {
        final Function function = new Function(
                FUNC_LOADHSPTINFO, 
                Arrays.<Type>asList(_Name, _Ip, _DssList), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Utf8String> getHpstFromDss(Utf8String _DssName) {
        final Function function = new Function(FUNC_GETHPSTFROMDSS, 
                Arrays.<Type>asList(_DssName), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Tuple3<Uint32, Utf8String, Utf8String>> AllDssList(Uint256 param0) {
        final Function function = new Function(FUNC_ALLDSSLIST, 
                Arrays.<Type>asList(param0), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple3<Uint32, Utf8String, Utf8String>>(
                new Callable<Tuple3<Uint32, Utf8String, Utf8String>>() {
                    @Override
                    public Tuple3<Uint32, Utf8String, Utf8String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<Uint32, Utf8String, Utf8String>(
                                (Uint32) results.get(0), 
                                (Utf8String) results.get(1), 
                                (Utf8String) results.get(2));
                    }
                });
    }

    public RemoteCall<Utf8String> getAllHpstName() {
        final Function function = new Function(FUNC_GETALLHPSTNAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Bool> address_verification(Address _addr) {
        final Function function = new Function(FUNC_ADDRESS_VERIFICATION, 
                Arrays.<Type>asList(_addr), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getAllDssName() {
        final Function function = new Function(FUNC_GETALLDSSNAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<TransactionReceipt> login() {
        final Function function = new Function(
                FUNC_LOGIN, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple3<Uint32, Utf8String, Utf8String>> AllHsptList(Uint256 param0) {
        final Function function = new Function(FUNC_ALLHSPTLIST, 
                Arrays.<Type>asList(param0), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple3<Uint32, Utf8String, Utf8String>>(
                new Callable<Tuple3<Uint32, Utf8String, Utf8String>>() {
                    @Override
                    public Tuple3<Uint32, Utf8String, Utf8String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<Uint32, Utf8String, Utf8String>(
                                (Uint32) results.get(0), 
                                (Utf8String) results.get(1), 
                                (Utf8String) results.get(2));
                    }
                });
    }

    public RemoteCall<TransactionReceipt> loadHsptInfo(Utf8String _Name, Utf8String _Ip, Utf8String _DssList, Address _Addr, Uint256 _AuthType) {
        final Function function = new Function(
                FUNC_LOADHSPTINFO, 
                Arrays.<Type>asList(_Name, _Ip, _DssList, _Addr, _AuthType), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Address> test() {
        final Function function = new Function(FUNC_TEST, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public static RemoteCall<KernalContract_sol_KernalContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(KernalContract_sol_KernalContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<KernalContract_sol_KernalContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(KernalContract_sol_KernalContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<KernalContract_sol_KernalContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(KernalContract_sol_KernalContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<KernalContract_sol_KernalContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(KernalContract_sol_KernalContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static KernalContract_sol_KernalContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new KernalContract_sol_KernalContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static KernalContract_sol_KernalContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new KernalContract_sol_KernalContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static KernalContract_sol_KernalContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new KernalContract_sol_KernalContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static KernalContract_sol_KernalContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new KernalContract_sol_KernalContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }
}
